// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  engineType = "library"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            Int        @id @default(autoincrement())
  email_address String     @unique
  phone_number  String
  name          String?
  user_name     String
  image         String?
  verified      Boolean    @default(false)
  clerk_id      String     @unique
  semesters     Semester[]
}

model Semester {
  id          Int       @id @default(autoincrement())
  semester    String    @default("Semester-1")
  userId      Int
  userDetails User      @relation(fields: [userId], references: [id])
  courses     Course[]
}

model Course {
  id              Int          @id @default(autoincrement())
  IndivCourse     String
  timeofcourse    String
  Totaldays       Int          @default(35)
  present         Int          @default(0)
  absent          Int          @default(0)
  cancelled       Int          @default(0)
  criteria        Int          @default(75)
  semesterId      Int
  semesterDetails Semester     @relation(fields: [semesterId], references: [id])
  thatday         Day_Course[]
}

model Days {
  id     Int          @id @default(autoincrement())
  day    String       @unique
  courses Day_Course[]
}

model Day_Course {
  courseId   Int
  course     Course  @relation(fields: [courseId], references: [id])
  dayId      Int
  day        Days     @relation(fields: [dayId], references: [id])
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([dayId, courseId])
}
